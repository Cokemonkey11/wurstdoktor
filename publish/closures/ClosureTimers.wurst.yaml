---
- Package:
    doc: ~
    name: ClosureTimers
    classes:
      - doc: ~
        abstract_: true
        name: CallbackSingle
        extends: ~
        implements: []
        fns:
          - doc: ~
            static_: false
            extensor: ~
            name: call
            params: []
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: start
            params:
              - typ: timer
                name: whichTimer
              - typ: real
                name: time
            returns: ~
          - doc: ~
            static_: true
            extensor: ~
            name: staticCallback
            params: []
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: ondestroy
            params: []
            returns: ~
      - doc: ~
        abstract_: true
        name: CallbackPeriodic
        extends: ~
        implements: []
        fns:
          - doc: ~
            static_: false
            extensor: ~
            name: call
            params:
              - typ: thistype
                name: cb
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: start
            params:
              - typ: timer
                name: whichTimer
              - typ: real
                name: time
            returns: ~
          - doc: ~
            static_: true
            extensor: ~
            name: staticCallback
            params: []
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: ondestroy
            params: []
            returns: ~
      - doc: ~
        abstract_: true
        name: CallbackCounted
        extends: ~
        implements: []
        fns:
          - doc: ~
            static_: false
            extensor: ~
            name: call
            params:
              - typ: thistype
                name: cb
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: start
            params:
              - typ: timer
                name: whichTimer
              - typ: real
                name: time
              - typ: int
                name: callAmount
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: isLast
            params: []
            returns: boolean
          - doc: ~
            static_: false
            extensor: ~
            name: getCount
            params: []
            returns: int
          - doc: ~
            static_: false
            extensor: ~
            name: stop
            params: []
            returns: ~
          - doc: ~
            static_: true
            extensor: ~
            name: staticCallback
            params: []
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: callAndCount
            params: []
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: ondestroy
            params: []
            returns: ~
          - doc: ~
            static_: false
            extensor: ~
            name: testDoAfter
            params: []
            returns: ~
    enums: []
    free_fns:
      - doc: "Execute an action after a certain time.\n\tThe callback object is automatically destroyed.\n\tMust be used on a timer acquired with `getTimer()`\n\n\tExample use:\n\t| someTimer.doAfter(10.0) ->\n\t|\t print(\"10 seconds later\")"
        static_: false
        extensor: timer
        name: doAfter
        params:
          - typ: real
            name: timeToWait
          - typ: CallbackSingle
            name: cb
        returns: CallbackSingle
      - doc: "Execute an action after a certain time.\n\tThe callback object is automatically destroyed.\n\n\tExample use:\n\t| doAfter(10.0) ->\n\t|\t print(\"10 seconds later\")"
        static_: false
        extensor: ~
        name: doAfter
        params:
          - typ: real
            name: timeToWait
          - typ: CallbackSingle
            name: cb
        returns: CallbackSingle
      - doc: "Execute an action with a 0-second timer delay.\n\tThe callback object is destroyed afterwards."
        static_: false
        extensor: ~
        name: nullTimer
        params:
          - typ: CallbackSingle
            name: cb
        returns: CallbackSingle
      - doc: "Execute an action periodically.\n\tThe callback has to be destroyed manually.\n\tMust be used on a timer acquired with `getTimer()`\n\n\tExample use:\n\t| someTimer.doPeriodically(0.5) cb ->\n\t|\t if i > 10\n\t|\t\tdestroy cb"
        static_: false
        extensor: timer
        name: doPeriodically
        params:
          - typ: real
            name: time
          - typ: CallbackPeriodic
            name: cb
        returns: CallbackPeriodic
      - doc: "Execute an action periodically.\n\tThe callback has to be destroyed manually.\n\n\tExample use:\n\t| doPeriodically(0.5) cb ->\n\t|\t if i > 10\n\t|\t\tdestroy cb"
        static_: false
        extensor: ~
        name: doPeriodically
        params:
          - typ: real
            name: time
          - typ: CallbackPeriodic
            name: cb
        returns: CallbackPeriodic
      - doc: "execute an action periodically, with a limited amount of calls\n\tThe callback object is destroyed after the action has been executed callAmount times.\n\tMust be used on a timer acquired with `getTimer()`\n\n\tExample use:\n\t| someTimer.doPeriodicallyCounted(0.5, 100) cb ->\n\t|\t doSomething()"
        static_: false
        extensor: timer
        name: doPeriodicallyCounted
        params:
          - typ: real
            name: time
          - typ: int
            name: callAmount
          - typ: CallbackCounted
            name: cb
        returns: CallbackCounted
      - doc: "execute an action periodically, with a limited amount of calls\n\tThe callback object is destroyed after the action has been executed callAmount times.\n\n\tExample use:\n\t| doPeriodicallyCounted(0.5, 100) cb ->\n\t|\t doSomething()"
        static_: false
        extensor: ~
        name: doPeriodicallyCounted
        params:
          - typ: real
            name: time
          - typ: int
            name: callAmount
          - typ: CallbackCounted
            name: cb
        returns: CallbackCounted
      - doc: "execute an action periodically, with a limited duration\n\tThe callback object is destroyed afterwards.\n\tMust be used on a timer acquired with `getTimer()`\n\n\tExample use:\n\t| someTimer.doPeriodicallyCounted(0.5, 10.) ->\n\t|\t doSomething()"
        static_: false
        extensor: timer
        name: doPeriodicallyTimed
        params:
          - typ: real
            name: interval
          - typ: real
            name: timerDuration
          - typ: CallbackCounted
            name: cb
        returns: CallbackCounted
      - doc: "execute an action periodically, with a limited duration\n\tThe callback object is destroyed afterwards.\n\n\tExample use:\n\t| doPeriodicallyCounted(0.5, 10.) ->\n\t|\t doSomething()"
        static_: false
        extensor: ~
        name: doPeriodicallyTimed
        params:
          - typ: real
            name: interval
          - typ: real
            name: timerDuration
          - typ: CallbackCounted
            name: cb
        returns: CallbackCounted
    interfaces: []
